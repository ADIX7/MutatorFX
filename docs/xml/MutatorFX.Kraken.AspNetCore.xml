<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MutatorFX.Kraken.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:MutatorFX.Kraken.AspNetCore.WebHostingExtensions">
            <summary>
            Contains extensions for configuring Kraken architecture application modules.
            </summary>
        </member>
        <member name="M:MutatorFX.Kraken.AspNetCore.WebHostingExtensions.UseKrakenModule``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            Configures a Kraken module to be used for the current <paramref name="webHostBuilder"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:MutatorFX.Kraken.AspNetCore.IKrakenModule"/> to use. A new object will be instantiated.</typeparam>
            <param name="webHostBuilder">The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder"/> to use. Should not be null.</param>
            <returns>The <paramref name="webHostBuilder"/> instance after configured by the <see cref="T:MutatorFX.Kraken.AspNetCore.IKrakenModule"/>.</returns>
        </member>
        <member name="M:MutatorFX.Kraken.AspNetCore.WebHostingExtensions.UseKrakenModule``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder,``0)">
            <summary>
            Configures a Kraken module to be used for the current <paramref name="webHostBuilder"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:MutatorFX.Kraken.AspNetCore.IKrakenModule"/> to use.</typeparam>
            <param name="webHostBuilder">The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder"/> to use. Should not be null.</param>
            <param name="krakenModule">The module to configure the builder with.</param>
            <returns>The <paramref name="webHostBuilder"/> instance after configured by the <see cref="T:MutatorFX.Kraken.AspNetCore.IKrakenModule"/>.</returns>
        </member>
        <member name="M:MutatorFX.Kraken.AspNetCore.WebHostingExtensions.UseKrakenStartupTask``1(Microsoft.AspNetCore.Hosting.IWebHost)">
            <summary>
            Execute an <see cref="T:MutatorFX.Kraken.AspNetCore.IKrakenStartupTask"/> before hosting starts of an <see cref="T:Microsoft.AspNetCore.Hosting.IWebHost"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:MutatorFX.Kraken.AspNetCore.IKrakenStartupTask"/> to use. Will be instantiated by using a service scope from the <paramref name="webHost"/>'s <see cref="P:Microsoft.AspNetCore.Hosting.IWebHost.Services"/>.</typeparam>
            <param name="webHost">The host to execute the startup task on.</param>
            <returns>The <paramref name="webHost"/>, after the startup task finished.</returns>
        </member>
        <member name="M:MutatorFX.Kraken.AspNetCore.WebHostingExtensions.UseInEnvironment(Microsoft.AspNetCore.Hosting.IWebHost,System.Func{Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.Boolean},System.Action{Microsoft.AspNetCore.Hosting.IWebHost})">
            <summary>
            Branch the host chain by an <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/>.
            </summary>
            <param name="webHost">The host to branch based on the <paramref name="predicate"/>.</param>
            <param name="predicate">The predicate to check the hostingenvironment to match.</param>
            <param name="buildAction">The action to execute when the host's environment is the given one.</param>
            <returns>The <paramref name="webHost"/>, after the branching statements executed in case of the hosting environment matching or immediately.</returns>
        </member>
    </members>
</doc>
